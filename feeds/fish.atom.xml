<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Fabian's Footnotes - fish</title><link href="https://faho.github.io/" rel="alternate"></link><link href="https://faho.github.io/feeds/fish.atom.xml" rel="self"></link><id>https://faho.github.io/</id><updated>2019-06-28T19:20:00+02:00</updated><entry><title>Sometimes, support tools can delight</title><link href="https://faho.github.io/sometimes-support-tools-can-delight.html" rel="alternate"></link><published>2019-06-28T19:20:00+02:00</published><updated>2019-06-28T19:20:00+02:00</updated><author><name>Fabian Homborg</name></author><id>tag:faho.github.io,2019-06-28:/sometimes-support-tools-can-delight.html</id><summary type="html">&lt;p&gt;What's this blogging thing all about? Lemme check!&lt;/p&gt;
&lt;p&gt;So, there's a recent addition to &lt;a class="reference external" href="https://fishshell.com"&gt;fish&lt;/a&gt; that I really like. It's called &amp;quot;littlecheck&amp;quot;, and it's a new test driver &lt;a class="footnote-reference" href="#id9" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, test drivers are unlikely to ever really receive praise (or even be mentioned at all in most contexts), but they're â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;What's this blogging thing all about? Lemme check!&lt;/p&gt;
&lt;p&gt;So, there's a recent addition to &lt;a class="reference external" href="https://fishshell.com"&gt;fish&lt;/a&gt; that I really like. It's called &amp;quot;littlecheck&amp;quot;, and it's a new test driver &lt;a class="footnote-reference" href="#id9" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, test drivers are unlikely to ever really receive praise (or even be mentioned at all in most contexts), but they're surprisingly impactful. A bad test driver will leave you scratching your head if you have a failure, or will introduce friction to adding tests, which will make people not add tests.&lt;/p&gt;
&lt;p&gt;For example, in our previous driver, each test consisted of three files:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;test.in, the file to actually run.&lt;/li&gt;
&lt;li&gt;test.out - the stdout of running test.in&lt;/li&gt;
&lt;li&gt;test.err - the stderr&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Which had a few problems:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;To create a new test, you need to create 3 files.&lt;/li&gt;
&lt;li&gt;To figure out where a test failed, you need to follow 3 files at the same time&lt;/li&gt;
&lt;li&gt;The &amp;quot;.in&amp;quot; is a fish script, but it can't be called &amp;quot;.fish&amp;quot; for internal reasons &lt;a class="footnote-reference" href="#id10" id="id2"&gt;[2]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The replacement looks a little something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;#RUN: %fish %s&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; banana
&lt;span class="c"&gt;#CHECK: banana&lt;/span&gt;
date +%Y
&lt;span class="c"&gt;#CHECK: 20{{\d+}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which immediately solves all the above issues (the files are indeed called &amp;quot;something.fish&amp;quot; &lt;a class="footnote-reference" href="#id11" id="id3"&gt;[3]&lt;/a&gt;), but also some I haven't even talked about yet.&lt;/p&gt;
&lt;p&gt;See, we had an odd bug where redirecting to a directory (&lt;tt class="docutils literal"&gt;echo something &amp;gt; /directory/&lt;/tt&gt;) didn't immediately fail. That's certainly something you'd like to test, and we did for quite a while. We just tested that redirecting to &lt;cite&gt;.&lt;/cite&gt; failed with an error, and that was that. One file for the command, one file for the error and one file just because.&lt;/p&gt;
&lt;p&gt;Fast forward 5 years to this January, when I was working on getting test suite to succeed on Solaris &lt;a class="footnote-reference" href="#id12" id="id4"&gt;[4]&lt;/a&gt;. As it turns out Solaris also prints an error, but a different one (instead of &amp;quot;Is a directory&amp;quot; EISDIR you'd get &amp;quot;Invalid argument&amp;quot; EINVAL). The old test driver had no way to express this, and the error couldn't be redirected (because it's a syntax error), so this required us to disable the test. &lt;a class="footnote-reference" href="#id13" id="id5"&gt;[5]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then we got another test driver (yes, that's two in parallel), which ran &amp;quot;invocation tests&amp;quot;, which checked how fish behaved when calling the binary with options. This was enough of an indirection that we managed to wedge in a way to use different test output depending on &lt;cite&gt;uname&lt;/cite&gt;, so it worked again. But this required:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A second test driver&lt;/li&gt;
&lt;li&gt;Checking operating system based on _name_, not feature testing. Using &lt;cite&gt;uname&lt;/cite&gt; should be avoided if at all possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So what does littlecheck do here? See that &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;{{\d+}}&lt;/span&gt;&lt;/tt&gt; above? That's an embedded regex that matches any string of digits, meaning that &lt;tt class="docutils literal"&gt;date&lt;/tt&gt; test will succeed as long as it's run in this century, or in about 18000 years &lt;a class="footnote-reference" href="#id14" id="id6"&gt;[6]&lt;/a&gt;. Or, alternatively, you could use it for something useful like this actual test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;#RUN: %fish %s&lt;/span&gt;
&lt;span class="k"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; . &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;status&lt;/span&gt; -b&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;status -b returned true after bad redirect on a begin block&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# Note that we sometimes get fancy quotation marks here, so let&amp;#39;s match three characters&lt;/span&gt;
&lt;span class="c"&gt;#CHECKERR: &amp;lt;W&amp;gt; fish: An error occurred while redirecting file {{...}}&lt;/span&gt;
&lt;span class="c"&gt;#CHECKERR: {{open: Is a directory|open: Invalid argument}}&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$status&lt;/span&gt;
&lt;span class="c"&gt;#CHECK: 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So you just embed the possibilities in a regex, and it'll just allow both. &lt;a class="footnote-reference" href="#id15" id="id7"&gt;[7]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hopefully you'll see why I really like this (thanks ridiculousfish!), and I haven't even mentioned the cherries on top:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It's entirely fish-agnostic - this can run any scripting language (that uses &lt;cite&gt;#&lt;/cite&gt; as a comment character)&lt;/li&gt;
&lt;li&gt;It's one single python file, no further dependencies&lt;/li&gt;
&lt;li&gt;It's public domain &lt;a class="footnote-reference" href="#id16" id="id8"&gt;[8]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Littlecheck is available at &lt;a class="reference external" href="https://github.com/ridiculousfish/littlecheck"&gt;https://github.com/ridiculousfish/littlecheck&lt;/a&gt;. I kinda love it right now.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id9" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I define &amp;quot;test driver&amp;quot; as &amp;quot;thing that runs the tests&amp;quot;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id10" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;We glob, and they are in the same directory as the main &amp;quot;test.fish&amp;quot; orchestration script. I didn't say it was a good reason!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id11" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Which makes text editors highlight them as fish scripts, which makes me happy.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id12" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Or Illumos, or OpenIndiana? I still don't get the nomenclature.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id13" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Alternatively, we could have caught the error and swapped it for the other one. But that would require behavioral changes, and it's not clear that every EINVAL is because of a directory, so we'd have to figure that out or just use the more generic error everywhere.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id14" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id6"&gt;[6]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;It's not an actual test we use.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id15" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id7"&gt;[7]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;For astute readers, there's another thing this allows, which required us to disable even the invocation tests.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id16" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id8"&gt;[8]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;My thoughts on licensing are a tad more complex, but in short I believe for a simple thing like this you want it to be drop-in-and-forget.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content></entry></feed>